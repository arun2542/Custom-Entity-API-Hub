CLASS zcl_custom_entity_ui DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_rap_query_provider .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_custom_entity_ui IMPLEMENTATION.


  METHOD if_rap_query_provider~select.

    DATA:
      lt_business_data TYPE TABLE OF zsales_order_apihub=>tys_a_sales_order_type,
      lo_http_client   TYPE REF TO if_web_http_client,
      lo_client_proxy  TYPE REF TO /iwbep/if_cp_client_proxy,
      lo_request       TYPE REF TO /iwbep/if_cp_request_read_list,
      lo_response      TYPE REF TO /iwbep/if_cp_response_read_lst,
      lv_top           TYPE i,
      lv_skip          TYPE i.


    DATA(lt_filter_condition) = io_request->get_filter( )->get_as_ranges( ).
    DATA: lo_filter_factory   TYPE REF TO /iwbep/if_cp_filter_factory,
          lo_filter_node      TYPE REF TO /iwbep/if_cp_filter_node,
          lo_filter_node_root TYPE REF TO /iwbep/if_cp_filter_node.

    lv_top     = io_request->get_paging( )->get_page_size( ).
    lv_skip    = io_request->get_paging( )->get_offset( ).
    DATA(requested_fields)  = io_request->get_requested_elements( ).
    DATA(sort_order)    = io_request->get_sort_elements( ).


    IF io_request->is_data_requested( ) .
      TRY.

          DATA(lo_destination) = cl_http_destination_provider=>create_by_url( i_url = 'https://sandbox.api.sap.com/s4hanacloud' ).

          lo_http_client = cl_web_http_client_manager=>create_by_http_destination( lo_destination ).
          lo_http_client->get_http_request(  )->set_header_fields( VALUE #(
                 (  name = 'APIKey'    value = 'gmERfNMgnfA5s0kGr5ml6iRieZyzED32' )
                 (  name = 'DataServiceVersion' value = '2.0' )
                 (  name = 'Accept' value = 'application/json' )
                  ) ).


          lo_client_proxy = /iwbep/cl_cp_factory_remote=>create_v2_remote_proxy(
            EXPORTING
               is_proxy_model_key       = VALUE #(
                   repository_id       = 'DEFAULT'
                                                   proxy_model_id      = 'ZSALES_ORDER_APIHUB'
                                                   proxy_model_version = '0001' )
              io_http_client             = lo_http_client
              iv_relative_service_root   = '/sap/opu/odata/sap/API_SALES_ORDER_SRV' ).

          ASSERT lo_http_client IS BOUND.


          lo_request = lo_client_proxy->create_resource_for_entity_set( 'A_SALES_ORDER' )->create_request_for_read( ).
          IF io_request->is_total_numb_of_rec_requested( ).
            lo_request->request_count( ).
          ENDIF.

          """Request Paging
          DATA(ls_paging) = io_request->get_paging( ).
          IF ls_paging->get_offset( ) >= 0.
            lo_request->set_skip( ls_paging->get_offset( ) ).
          ENDIF.

          IF ls_paging->get_page_size( ) <> if_rap_query_paging=>page_size_unlimited.
            lo_request->set_top( ls_paging->get_page_size( ) ).
*          lo_request->set_top( lv_top ).
          ENDIF..

*          lo_request->set_skip( lv_skip ).
          lo_filter_factory = lo_request->create_filter_factory( ).
          LOOP AT lt_filter_condition INTO DATA(ls_filter_condition).
            lo_filter_node = lo_filter_factory->create_by_range(
            iv_property_path = ls_filter_condition-name
            it_range         = ls_filter_condition-range
          ).

            IF lo_filter_node_root IS INITIAL.
              lo_filter_node_root = lo_filter_node.
            ELSE.
              lo_filter_node_root = lo_filter_node_root->and( lo_filter_node ).
            ENDIF.
          ENDLOOP.

          " Set filter
          IF lo_filter_node_root IS NOT INITIAL.
            lo_request->set_filter( lo_filter_node_root ).
          ENDIF.
          " Execute the request and retrieve the business data
          lo_response = lo_request->execute(  ).
          IF io_request->is_total_numb_of_rec_requested( ).
            io_response->set_total_number_of_records( lo_response->get_count( ) ).
          ENDIF.
          lo_response->get_business_data( IMPORTING et_business_data = lt_business_data ).

*          io_response->set_total_number_of_records( lines( lt_business_data ) ).
          io_response->set_data( lt_business_data ).

        CATCH /iwbep/cx_cp_remote INTO DATA(lx_remote).
          " Handle remote Exception
          " It contains details about the problems of your http(s) connection

        CATCH /iwbep/cx_gateway INTO DATA(lx_gateway).
          " Handle Exception

        CATCH cx_web_http_client_error INTO DATA(lx_web_http_client_error).
          " Handle Exception
          RAISE SHORTDUMP lx_web_http_client_error.

*        ENDIF.
      ENDTRY.
    ENDIF.
  ENDMETHOD.
ENDCLASS.
